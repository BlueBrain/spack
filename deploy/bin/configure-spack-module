#!/bin/bash -eu

set -o nounset

if [[ -z "${SPACK_ROOT:-}" ]]; then
    echo "need to operate with a sourced Spack!"
    exit 1
fi

if [[ -z "${DEPLOYMENT_ROOT:-}" ]]; then
    echo "need to operate with DEPLOYMENT_ROOT set!"
    exit 1
fi

cat <<EOF
#%Module1.0

if [ module-info mode load ] {
    puts stderr "Welcome to the central Spack installation!\n"
    puts stderr "Software will be installed into ~/spack_install by default."
    puts stderr "Modules for installed software are disabled, to enable a specific one, use:\n"
    puts stderr "\tspack config add modules:tcl:whitelist:package_to_install\n"
    puts stderr "To modify the software installation directory, use\n"
    puts stderr "\texport SPACK_USER_CACHE_PATH=\$\{NEW_INSTALL_DIR\}\n"
    puts stderr "Or modify the Spack configuration with:\n"
    puts stderr "\tunset SPACK_USER_CACHE_PATH  # Will put cached stuff in ~/.spack"
    puts stderr "\tspack config add config:install_tree:root:\$\{NEW_INSTALL_DIR\}\n"
    puts stderr "To create a modifiable version of Spack, use\n"
    puts stderr "\tspack clone \$\{NEW_SPACK_DIR\}"
    puts stderr "\tcp \$\{NEW_SPACK_DIR\}/{deploy/configs/*.yaml,etc/spack}"
    puts stderr "\t. \$\{NEW_SPACK_DIR\}/share/spack/setup-env.sh\n"
}

module-whatis   Spack is our software building and deployment toolkit

# FIXME environment-modules 4 has getenv, which is preferred
set home \$env(HOME)

prepend-path    PATH ${SPACK_ROOT}/bin
setenv          SPACK_ROOT ${SPACK_ROOT}
setenv          SPACK_SYSTEM_CONFIG_PATH ${DEPLOYMENT_ROOT}/config
setenv          SPACK_USER_CACHE_PATH \$home/spack_install
EOF
