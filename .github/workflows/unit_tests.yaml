name: linux tests

on:
  push:
    branches:
      - develop
      - releases/**
  pull_request:
    branches:
      - develop
      - releases/**
jobs:
  # Validate that the code can be run on all the Python versions
  # supported by Spack
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # @v2
    - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # @v2
      with:
        python-version: 3.9
    - name: Install Python Packages
      run: |
        pip install --upgrade pip
        pip install --upgrade vermin
    - name: vermin (Spack's Core)
      run: vermin --backport argparse --violations --backport typing -t=2.6- -t=3.5- -vvv lib/spack/spack/ lib/spack/llnl/ bin/
    - name: vermin (Repositories)
      run: vermin --backport argparse --violations --backport typing -t=2.6- -t=3.5- -vvv var/spack/repos
  # Run style checks on the files that have been changed
  style:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # @v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # @v2
      with:
        python-version: 3.9
    - name: Install Python packages
      run: |
        pip install --upgrade pip six setuptools types-six
    - name: Setup git configuration
      run: |
        # Need this for the git tests to succeed.
        git --version
        . .github/workflows/setup_git.sh
    - name: Run style tests
      run: |
          share/spack/qa/run-style-tests
  # Check which files have been updated by the PR
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      core: ${{ steps.filter.outputs.core }}
      packages: ${{ steps.filter.outputs.packages }}
      with_coverage: ${{ steps.coverage.outputs.with_coverage }}
    steps:
    - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # @v2
      if: ${{ github.event_name == 'push' }}
      with:
        fetch-depth: 0
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50
      id: filter
      with:
        # See https://github.com/dorny/paths-filter/issues/56 for the syntax used below
        filters: |
          core:
          - './!(var/**)/**'
          packages:
          - 'var/**'
    # Some links for easier reference:
    #
    # "github" context: https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context
    # job outputs: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idoutputs
    # setting environment variables from earlier steps: https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
    #
    - id: coverage
      # Run the subsequent jobs with coverage if core has been modified,
      # regardless of whether this is a pull request or a push to a branch
      run: |
        echo Core changes: ${{ steps.filter.outputs.core }}
        echo Event name: ${{ github.event_name }}
        if [ "${{ steps.filter.outputs.core }}" == "true" ]
        then
          echo "::set-output name=with_coverage::true"
        else
          echo "::set-output name=with_coverage::false"
        fi
  # Test shell integration
  shell:
    needs: [ validate, style, changes ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # @v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # @v2
      with:
        python-version: 3.9
    - name: Install System packages
      run: |
          sudo apt-get -y update
          # Needed for shell tests
          sudo apt-get install -y coreutils kcov csh zsh tcsh fish dash bash
    - name: Install Python packages
      run: |
          pip install --upgrade pip six setuptools codecov coverage[toml]
    - name: Setup git configuration
      run: |
          # Need this for the git tests to succeed.
          git --version
          . .github/workflows/setup_git.sh
    - name: Run shell tests (without coverage)
      if: ${{ needs.changes.outputs.with_coverage == 'false' }}
      run: |
          share/spack/qa/run-shell-tests
    - name: Run shell tests (with coverage)
      if: ${{ needs.changes.outputs.with_coverage == 'true' }}
      env:
          COVERAGE: true
      run: |
          share/spack/qa/run-shell-tests
    - uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70 # @v2.1.0
      if: ${{ needs.changes.outputs.with_coverage == 'true' }}
      with:
        flags: shelltests,linux
