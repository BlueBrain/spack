packages:
  arrow:
    # for interoperability with Spark
    require: "+snappy"
  binutils:
    version: [2.37]
    # Merged GCC / LLVM requirements
    variants: +gas+gold+ld+plugins~libiberty
# bison:
#   require: "%gcc@11.3.1 target=skylake"
  boost:
    variants: +filesystem+pic+test
  caliper:
    # Allow GCC != 12 for things that depend on CUDA
    require: "%gcc target=skylake"
  coreneuron:
    # Keep this aligned with NEURON, otherwise the Spack solver may decide that
    # rolling back to NEURON 8.2.2 with external CoreNEURON is a net win
    require:
      - one_of: ["%intel", "%nvhpc"]
  cuda:
    # Pin 11.8.0 to avoid 12.0.0, which is too new for BB5
    # Pin GCC 11 because CUDA 11.8.0 is incompatible with GCC 12
    require: "@11.8.0%gcc@11.3.0 target=skylake"
  curl:
    version: [7.76.1]
    externals:
    - spec: curl@7.76.1
      prefix: /usr
  darshan-runtime:
    variants: +slurm
  eigen:
    variants: ~fftw~gmp~metis~mpfr~scotch
  gcc:
    # +strip added to force rebuild of GCC with -fno-canonical-system-headers
    variants: +binutils+strip
  gmsh:
    variants: ~mmg~fltk
  hdf5:
    variants: +cxx+hl
  icu4c:
    version: [64.1]
    # Drags in heavy PEARL dependencies
  julia:
    variants: +external_llvm
  kokkos:
    variants: +openmp
  llvm:
    # Allow GCC != 12 for things that depend on CUDA
    require: "%gcc target=skylake"
  m4:
    version: [1.4.19]
    externals:
    - spec: m4@1.4.19
      prefix: /usr
  model-neocortex:
    variants: ~gpu
    require: "%intel"
      # - one_of: ["%intel", "%nvhpc"]
  mxnet:
    version: [1.8.0]  # Don't build @1.master because nobody likes moving targets
  neurodamus-hippocampus:
    variants: ~~gpu
    require: "%intel"
  neurodamus-model:
    variants: ~~gpu
    require: "%intel"
  neurodamus-mousify:
    variants: ~~gpu
    require: "%intel"
  neurodamus-neocortex:
    variants: ~~gpu
    require: "%intel"
  neurodamus-thalamus:
    variants: ~~gpu
    require: "%intel"
  neuron:
    require:
      - one_of: ["%intel", "%nvhpc"]
  nmodl:
    require:
      - one_of: ["%gcc", "%intel", "%nvhpc"]
  nvhpc:
    # Consistently use GCC 11.3.1 for CUDA/NVIDIA
    require: "%gcc@11.3.1 target=skylake"
  omega-h:
    variants: ~kokkos~trilinos
  opencv:
    variants: ~gtk~vtk
  openssh:
    version: [8.7p1-24]
    externals:
    - spec: openssh@8.7p1-24
      prefix: /usr
  openssl:
    version: [3.0.1]
    externals:
    - spec: openssl@3.0.1
      prefix: /usr
  ospray:
    require: "%intel"
  perl:
    version: [5.32.1]
    externals:
    - spec: perl@5.32.1
      prefix: /usr
  petsc:
    variants: ~fortran
  python:
    variants: +tk
    version: [3.10.8]
  py-numpy:
    version: [1.22.4]  # bluepye{model,fe}: <1.24, neurondamus: <1.23
  py-setuptools:
    version: [63.0.0]  # required by py-numpy
  qt:
    version: [5.14.2]
    variants: ~ssl~sql~tools
  range-v3:
    variants: ~doc
  spdlog:
    variants: +fmt_external
  steps:
    variants: +lapack+petsc+mpi
  superlu-dist:
    variants: +int64
  tar:
    version: [1.34]
    externals:
    - spec: tar@1.34
      prefix: /usr
  timemory:
    variants: +mpi~cuda+cupti+caliper~gperftools~python@3.0.0a
  all:
    require: "%gcc@12.2.0 target=skylake"
    providers:
      mpi:: [hpe-mpi]
      scalapack:: [intel-oneapi-mkl]
      lapack:: [intel-oneapi-mkl]
      blas:: [intel-oneapi-mkl]
