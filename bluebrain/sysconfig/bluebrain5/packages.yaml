packages:
  arrow:
    # for interoperability with Spark
    require: "+snappy"
  binutils:
    version: [2.41]
    # Merged GCC / LLVM requirements
    variants: +gas+gold+ld+plugins~libiberty
  boost:
    variants: +filesystem+pic+serialization+test
  coreneuron:
    # Keep this aligned with NEURON, otherwise the Spack solver may decide that
    # rolling back to NEURON 8.2.2 with external CoreNEURON is a net win
    require:
      - one_of: ["%oneapi", "%nvhpc", "%intel"]
  cuda: {}
    # For future reference if CUDA requires an older compiler:
    #
    # Pin GCC 11 because CUDA 11.8.0 is incompatible with GCC 12
    # CUDA 12.0.0 should be compatible with GCC 12
    # require:
    #   - one_of:
    #     - "@12.0.0%gcc@12.3.0 target=skylake"
  curl:
    version: [7.29.0]
    externals:
    - spec: curl@7.29.0
      prefix: /usr
  darshan-runtime:
    variants: +slurm
  eigen:
    variants: ~fftw~gmp~metis~mpfr~scotch
  gcc:
    # +strip added to force rebuild of GCC with -fno-canonical-system-headers
    variants: +binutils+strip
  gdb:
    # has broken dependencies with debuginfod
    variants: ~debuginfod
  gzip:
    # 1.12 fails on BB5 with gcc@12.3
    version: [1.11]
  gmsh:
    variants: ~cgns~fltk~med~mmg+mpi+openmp+shared
  hdf5:
    variants: +cxx+hl
  icu4c:
    version: [64.1]
    # Drags in heavy PEARL dependencies
  kokkos:
    variants: +openmp
  krb5:
    # Keep GitLab compatibility in git
    buildable: false
    externals:
    - spec: krb5@1.15.1
      prefix: /usr
  llvm:
    # Allow GCC != 12 for things that depend on CUDA
    require: "%gcc target=skylake"
  mesa:
    # Leads to all kinds of trouble for 2024
    variants: ~llvm
  model-neocortex:
    variants: ~gpu
    require:
      - one_of: ["%oneapi", "%intel"]
  neurodamus-hippocampus:
    variants: ~~gpu
    require:
      - one_of: ["%oneapi", "%intel"]
  neurodamus-model:
    variants: ~~gpu
    require:
      - one_of: ["%oneapi", "%intel"]
  neurodamus-mousify:
    variants: ~~gpu
    require:
      - one_of: ["%oneapi", "%intel"]
  neurodamus-neocortex:
    variants: ~~gpu
    require:
      - one_of: ["%oneapi", "%intel"]
  neurodamus-thalamus:
    variants: ~~gpu
    require:
      - one_of: ["%oneapi", "%intel"]
  neuron:
    require:
      - one_of: ["%oneapi", "%nvhpc", "%intel"]
  # Set nlohmann-json because of constraint of libsonata
  # that has a results building multiple nmodl packages
  # depending whether it is build with or without libsonata
  nlohmann-json:
    version: [3.9.1]
  nmodl:
    require:
      - one_of: ["%gcc", "%oneapi", "%nvhpc", "%intel"]
  omega-h:
    variants: ~kokkos~trilinos
  opencv:
    variants: ~gtk~vtk
  openssh:
    version: [9.1p1]
    externals:
    - spec: openssh@9.1p1
      prefix: /usr
  opengl:
    buildable: false
    version: [4.5]
    externals:
    - spec: opengl@4.5
      prefix: /usr
  petsc:
    variants: ~debug~fortran~hypre+int64+mpi
  python:
    variants: +tk
  py-frozendict:
    # older versions fail to work with Python 3.11
    require: "@2.3.10"
  py-numpy-quaternion:
    require: ~numba~scipy  # pulls in LLVM, spatial-index does not need that
  py-tables:
    # older versions fail to compile without lzo
    require: "@3.9:"
  py-urllib3:
    # newer versions fail when used in conjunction with requests-toolbelt
    require: "@1"
  qt:
    variants: ~ssl~sql~tools
  range-v3:
    variants: ~doc
  slurm:
    buildable: false
    version: [21.08.3]
    externals:
    - spec: slurm@21.08.3
      prefix: /usr
  spdlog:
    variants: +fmt_external
  steps:
    variants: +lapack+petsc+mpi
  superlu-dist:
    variants: +int64
  timemory:
    variants: +mpi~cuda+cupti+caliper~gperftools~python@3.0.0a
  util-linux:
    # 2.39 and later fails with macros that our ancient linux headers don't define! ðŸ™€
    require: "@:2.38"
  all:
    require: "%gcc@12.3.0 target=skylake"
    providers:
      mpi:: [hpe-mpi]
      scalapack:: [intel-oneapi-mkl]
      lapack:: [intel-oneapi-mkl]
      blas:: [intel-oneapi-mkl]
