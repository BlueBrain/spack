diff --git a/CMakeLists.txt b/CMakeLists.txt
index 09d46435..cedaaa9f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -48,47 +48,6 @@ if(ENABLE_HDF5)
     set(HDF5_LIBRARIES ${HDF5_HL_LIBRARIES} ${HDF5_C_LIBRARIES} ${HDF5_CXX_LIBRARIES})
 endif()
 
-set(SUITESPARSE_DIR "${CMAKE_SOURCE_DIR}/ThirdParty/SuiteSparse/")
-set(SUITESPARSE_INCLUDE_DIRS "${SUITESPARSE_DIR}/include" "${CMAKE_SOURCE_DIR}/ThirdParty/sundials/src")
-set(SUITESPARSE_LIBRARIES
-    ${SUITESPARSE_DIR}/KLU/Lib/libklu${CMAKE_STATIC_LIBRARY_SUFFIX}
-    ${SUITESPARSE_DIR}/COLAMD/Lib/libcolamd${CMAKE_STATIC_LIBRARY_SUFFIX}
-    ${SUITESPARSE_DIR}/BTF/Lib/libbtf${CMAKE_STATIC_LIBRARY_SUFFIX}
-    ${SUITESPARSE_DIR}/AMD/Lib/libamd${CMAKE_STATIC_LIBRARY_SUFFIX}
-    ${SUITESPARSE_DIR}/SuiteSparse_config/libsuitesparseconfig${CMAKE_STATIC_LIBRARY_SUFFIX}
-    )
-
-set(SUNDIALS_LIB_DIR "${CMAKE_SOURCE_DIR}/ThirdParty/sundials/build/${CMAKE_INSTALL_LIBDIR}")
-set(SUNDIALS_LIBRARIES
-    ${SUNDIALS_LIB_DIR}/libsundials_nvecserial${CMAKE_STATIC_LIBRARY_SUFFIX}
-    ${SUNDIALS_LIB_DIR}/libsundials_sunlinsolband${CMAKE_STATIC_LIBRARY_SUFFIX}
-    ${SUNDIALS_LIB_DIR}/libsundials_sunlinsolklu${CMAKE_STATIC_LIBRARY_SUFFIX}
-    ${SUNDIALS_LIB_DIR}/libsundials_sunlinsolpcg${CMAKE_STATIC_LIBRARY_SUFFIX}
-    ${SUNDIALS_LIB_DIR}/libsundials_sunlinsolspbcgs${CMAKE_STATIC_LIBRARY_SUFFIX}
-    ${SUNDIALS_LIB_DIR}/libsundials_sunlinsolspfgmr${CMAKE_STATIC_LIBRARY_SUFFIX}
-    ${SUNDIALS_LIB_DIR}/libsundials_sunmatrixband${CMAKE_STATIC_LIBRARY_SUFFIX}
-    ${SUNDIALS_LIB_DIR}/libsundials_sunmatrixdense${CMAKE_STATIC_LIBRARY_SUFFIX}
-    ${SUNDIALS_LIB_DIR}/libsundials_sunmatrixsparse${CMAKE_STATIC_LIBRARY_SUFFIX}
-    ${SUNDIALS_LIB_DIR}/libsundials_sunnonlinsolfixedpoint${CMAKE_STATIC_LIBRARY_SUFFIX}
-    ${SUNDIALS_LIB_DIR}/libsundials_sunnonlinsolnewton${CMAKE_STATIC_LIBRARY_SUFFIX}
-    ${SUNDIALS_LIB_DIR}/libsundials_cvodes${CMAKE_STATIC_LIBRARY_SUFFIX}
-    ${SUNDIALS_LIB_DIR}/libsundials_idas${CMAKE_STATIC_LIBRARY_SUFFIX}
-    )
-set(SUNDIALS_INCLUDE_DIRS "${CMAKE_SOURCE_DIR}/ThirdParty/sundials/build/include")
-
-option(SUNDIALS_SUPERLUMT_ENABLE "Enable sundials SuperLUMT?" OFF)
-if(SUNDIALS_SUPERLUMT_ENABLE)
-    set(SUNDIALS_LIBRARIES ${SUNDIALS_LIBRARIES}
-        ${SUNDIALS_LIB_DIR}/libsundials_sunlinsolsuperlumt${CMAKE_STATIC_LIBRARY_SUFFIX}
-        ${CMAKE_SOURCE_DIR}/ThirdParty/SuperLU_MT_3.1/lib/libsuperlu_mt_PTHREAD${CMAKE_STATIC_LIBRARY_SUFFIX}
-        -lblas
-        )
-    set(SUNDIALS_INCLUDE_DIRS ${SUNDIALS_INCLUDE_DIRS}
-        "${CMAKE_SOURCE_DIR}/ThirdParty/SuperLU_MT_3.1/SRC/")
-endif()
-
-set(GSL_LITE_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/ThirdParty/gsl")
-
 # AMICI requires BLAS, currently Intel MKL, CBLAS or MATLAB BLAS can be used.
 # The latter is not supported via CMake yet.
 set(BLAS "CBLAS" CACHE STRING "BLAS library to use")
@@ -149,32 +108,60 @@ if(ENABLE_HDF5)
     list(APPEND AMICI_SRC_LIST ${CMAKE_SOURCE_DIR}/src/hdf5.cpp)
 endif()
 
+find_package(SUNDIALS REQUIRED)
+
 add_library(${PROJECT_NAME} ${AMICI_SRC_LIST})
 add_dependencies(${PROJECT_NAME} version)
 file(GLOB PUBLIC_HEADERS include/amici/*.h)
 set_target_properties(${PROJECT_NAME} PROPERTIES PUBLIC_HEADER "${PUBLIC_HEADERS}")
 target_include_directories(${PROJECT_NAME}
+    PRIVATE $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/ThirdParty/sundials/src>
     PUBLIC $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include>
     $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
     PUBLIC $<BUILD_INTERFACE:${CMAKE_BINARY_DIR}/include>
-    PUBLIC swig
-    PUBLIC ${GSL_LITE_INCLUDE_DIR}
-    PUBLIC ${SUNDIALS_INCLUDE_DIRS}
+    PUBLIC $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/swig>
+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/amici/swig>
+    PUBLIC $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/ThirdParty/gsl>
+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/amici/gsl>
     PUBLIC ${SUITESPARSE_INCLUDE_DIRS}
-    PUBLIC ${HDF5_INCLUDE_DIRS}
     )
 
+install(DIRECTORY "${CMAKE_SOURCE_DIR}/ThirdParty/gsl" DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/amici)
+install(DIRECTORY "${CMAKE_SOURCE_DIR}/swig" DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/amici)
+
 if(NOT "${BLAS_INCLUDE_DIRS}" STREQUAL "")
     target_include_directories(${PROJECT_NAME} PUBLIC ${BLAS_INCLUDE_DIRS})
 endif()
 
 target_link_libraries(${PROJECT_NAME}
-    PUBLIC ${SUNDIALS_LIBRARIES}
-    PUBLIC ${SUITESPARSE_LIBRARIES}
-    PUBLIC ${HDF5_LIBRARIES}
+    PUBLIC hdf5::hdf5
     PUBLIC ${BLAS_LIBRARIES}
+    PUBLIC ${CMAKE_DL_LIBS}
     )
 
+foreach(SUNDIALS_TARGET
+     SUNDIALS::generic_static
+     SUNDIALS::nvecserial_static
+     SUNDIALS::sunmatrixband_static
+     SUNDIALS::sunmatrixdense_static
+     SUNDIALS::sunmatrixsparse_static
+     SUNDIALS::sunlinsolband_static
+     SUNDIALS::sunlinsoldense_static
+     SUNDIALS::sunlinsolpcg_static
+     SUNDIALS::sunlinsolspbcgs_static
+     SUNDIALS::sunlinsolspfgmr_static
+     SUNDIALS::sunlinsolspgmr_static
+     SUNDIALS::sunlinsolsptfqmr_static
+     SUNDIALS::sunlinsolklu_static
+     SUNDIALS::sunnonlinsolnewton_static
+     SUNDIALS::sunnonlinsolfixedpoint_static
+     SUNDIALS::cvodes_static
+     SUNDIALS::idas_static
+     )
+    target_link_libraries(${PROJECT_NAME} PUBLIC ${SUNDIALS_TARGET})
+    target_include_directories(${PROJECT_NAME} PUBLIC $<TARGET_PROPERTY:${SUNDIALS_TARGET},INTERFACE_INCLUDE_DIRECTORIES>)
+endforeach(SUNDIALS_TARGET)
+
 # Create targets to make the sources show up in IDEs for convenience
 
 # For matlab interface
@@ -228,9 +215,6 @@ install(TARGETS ${PROJECT_NAME} EXPORT AmiciTargets
     INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
     PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/amici
 )
-export(EXPORT AmiciTargets FILE AmiciTargets.cmake
-    NAMESPACE Upstream::
-    )
 include(CMakePackageConfigHelpers)
 include(version)
 configure_package_config_file(
@@ -239,8 +223,11 @@ configure_package_config_file(
     INSTALL_DESTINATION "${LIB_INSTALL_DIR}/cmake/"
     )
 write_basic_package_version_file(AmiciConfigVersion.cmake COMPATIBILITY ExactVersion)
+install(EXPORT AmiciTargets
+    FILE AmiciTargets.cmake
+    NAMESPACE Upstream::
+    DESTINATION share/Amici/cmake )
 install(FILES ${CMAKE_CURRENT_BINARY_DIR}/AmiciConfig.cmake
-    ${CMAKE_CURRENT_BINARY_DIR}/AmiciTargets.cmake
     ${CMAKE_CURRENT_BINARY_DIR}/AmiciConfigVersion.cmake
     DESTINATION share/Amici/cmake )
 # Register package
@@ -272,5 +259,4 @@ if(BUILD_TESTS)
     else()
         message(WARNING "Cannot build tests with ENABLE_HDF5=OFF.")
     endif()
-
 endif()
diff --git a/cmake/AmiciConfig.cmake b/cmake/AmiciConfig.cmake
index 7db90266..f0c291b4 100644
--- a/cmake/AmiciConfig.cmake
+++ b/cmake/AmiciConfig.cmake
@@ -2,6 +2,9 @@
 
 include(CMakeFindDependencyMacro)
 
+find_package(SUNDIALS REQUIRED)
+find_package(HDF5 REQUIRED)
+
 include("${CMAKE_CURRENT_LIST_DIR}/AmiciTargets.cmake")
 
 check_required_components(Amici)
diff --git a/python/sdist/pyproject.toml b/python/sdist/pyproject.toml
index 31c8ed75..82087744 100644
--- a/python/sdist/pyproject.toml
+++ b/python/sdist/pyproject.toml
@@ -9,12 +9,8 @@ requires = [
     # would be pinning the setup.py numpy requirement to the same version as
     # here, which we want to avoid.
     # cf. discussion at https://github.com/numpy/numpy/issues/5888
-    # See also:
-    #  https://github.com/scipy/oldest-supported-numpy/blob/master/setup.cfg
-    #  https://github.com/h5py/h5py/blob/master/setup.py
-    "numpy==1.14.5; python_version=='3.7'",
-    "numpy==1.17.5; python_version=='3.8'",
-    "numpy==1.19.3; python_version=='3.9'",
-    "numpy==1.21.4; python_version>='3.10'",
+    # (https://github.com/scipy/oldest-supported-numpy/)
+    "oldest-supported-numpy",
+    "sympy",
 ]
 build-backend = "setuptools.build_meta"
